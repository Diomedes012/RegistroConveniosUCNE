@page "/Registro-Convenio"
@inject GestionConveniosUCNE.Services.ConveniosService ConveniosService
@using GestionConveniosUCNE.Models
@using Microsoft.AspNetCore.Components.Forms
@rendermode InteractiveServer

<EditForm Model="@ConvenioModel" OnValidSubmit="@GuardarConvenio">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="rectangle-6">
        <img src="images/logoUcnePeq.png" class="logo-1" alt="Logo" />
    </div>

    <div class="form-container">
        <h3>Registrar Nuevo Convenio</h3>

        <div class="form-group">
            <label for="titulo">Título del Convenio:</label>
            <InputText id="titulo" @bind-Value="ConvenioModel.Titulo" class="form-control" placeholder="Ej. Acuerdo de cooperación académica" />
            <ValidationMessage For="@(() => ConvenioModel.Titulo)" />
        </div>

        <div class="form-group">
            <label for="tipoConvenio">Tipo de Convenio:</label>
            <InputText id="tipoConvenio" @bind-Value="ConvenioModel.TipoConvenio" class="form-control" placeholder="Académico, de movilidad, etc." />
            <ValidationMessage For="@(() => ConvenioModel.TipoConvenio)" />
        </div>

        <div class="form-group">
            <label for="categoria">Categoría:</label>
            <InputText id="categoria" @bind-Value="ConvenioModel.Categoria" class="form-control" placeholder="Convenio, Contrato, MOU..." />
            <ValidationMessage For="@(() => ConvenioModel.Categoria)" />
        </div>

        <div class="form-group">
            <label for="fechaFirma">Fecha de Firma:</label>
            <InputDate id="fechaFirma" @bind-Value="ConvenioModel.FechaFirma" class="form-control" />
            <ValidationMessage For="@(() => ConvenioModel.FechaFirma)" />
        </div>

        <div class="form-group">
            <label for="fechaVencimiento">Fecha de Vencimiento:</label>
            <InputDate id="fechaVencimiento" @bind-Value="ConvenioModel.FechaVencimiento" class="form-control" />
        </div>

        <div class="form-group">
            <label for="duracionMeses">Duración (meses):</label>
            <InputNumber id="duracionMeses" @bind-Value="ConvenioModel.DuracionMeses" class="form-control" />
        </div>

        <div class="form-group">
            <label for="estado">Estado:</label>
            <InputSelect id="estado" @bind-Value="ConvenioModel.Estado" class="form-control">
                <option value="Activo">Activo</option>
                <option value="Vencido">Vencido</option>
                <option value="En Renovación">En Renovación</option>
            </InputSelect>
            <ValidationMessage For="@(() => ConvenioModel.Estado)" />
        </div>

        <div class="form-group full-width">
            <label for="descripcionObjetivos">Descripción y Objetivos:</label>
            <InputTextArea id="descripcionObjetivos" @bind-Value="ConvenioModel.DescripcionObjetivos" class="form-control textarea-large" />
            <ValidationMessage For="@(() => ConvenioModel.DescripcionObjetivos)" />
        </div>

        <div class="form-group">
            <label for="archivo">Archivo del Convenio (PDF, opcional):</label>
            <InputFile id="archivo" OnChange="OnFileSelected" class="form-control-file" />
        </div>

        <div class="form-actions full-width">
            <button type="submit" class="btn btn-primary">Guardar Convenio</button>
        </div>

    </div>
</EditForm>

@code {
    private Convenio ConvenioModel = new();
    private IBrowserFile? archivo;

    private async Task GuardarConvenio()
    {
        try
        {
            if (archivo != null)
            {
                // Guardar archivo localmente o en wwwroot/uploads
                var filePath = Path.Combine("wwwroot", "uploads", archivo.Name);
                using var stream = File.Create(filePath);
                await archivo.OpenReadStream(10 * 1024 * 1024).CopyToAsync(stream);

                ConvenioModel.ArchivoPrincipal = $"/uploads/{archivo.Name}";
            }

            ConvenioModel.UltimaModificacion = DateTime.Now;

            var resultado = await ConveniosService.Guardar(ConvenioModel);

            if (resultado)
            {
                ConvenioModel = new Convenio();
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    private void OnFileSelected(InputFileChangeEventArgs e)
    {
        archivo = e.File;
        Console.WriteLine($"Archivo seleccionado: {archivo.Name}");
    }
}
